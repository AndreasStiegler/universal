/*!
GPII Preferences Server GET Handler

Copyright 2012 OCAD University

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

(function () {

    "use strict";

    var fluid = require("infusion"),
        os = require("os"),
        gpii = fluid.registerNamespace("gpii");

    fluid.demands("gpii.requests.request.handler", "deviceGet", {
        options: {
            invokers: {
                handle: {
                    funcName: "gpii.requests.request.handler.deviceGet",
                    args: ["{requests}", "{request}", "{deviceReporter}.installedSolutionsDataSource"]
                }
            }
        }
    });

    gpii.requests.request.handler.deviceGet = function (requests, request, installedSolutionsDataSource) {
        installedSolutionsDataSource.get(null, gpii.callbackWrapper(request, function (solutions) {
            if (!solutions) {
                requests.events.onError.fire();
                return;
            }
            requests.events.onSuccess.fire({
                solutions: solutions,
                OS: {
                    //TODO: need to report more details - windowmanager, etc.
                    id: os.platform(), 
                    version: os.release().replace("_", "-") // TODO: Need a better strategy--Node semver fails horribly in the face of the benign underscore (eg. x86_64).
                }
            });
        }));
    };

})();