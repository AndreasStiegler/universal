/*
GPII Infusion/Express Middleware

Copyright 2012 OCAD University

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

(function () {

    "use strict";

    var fluid = require("infusion"),
        fs = require("fs"),
        path = require("path"),
        gpii = fluid.registerNamespace("gpii");

    fluid.require("gpiiFramework", require);

    fluid.registerNamespace("gpii.config")

    gpii.config.getNodeEnv = function () {
        return process.env.NODE_ENV || "development";
    };

    gpii.config.getConfigPath = function () {
        return fluid.get(process.argv, "2");
    };

    gpii.config.makeConfigLoader = function (options) {
        var fullPath = path.join(__dirname, options.configPath, fluid.path(options.nodeEnv, "json")),
            config = JSON.parse(fs.readFileSync(fullPath)),
            componentName = config.typeName;
        fluid.defaults(componentName, config.options);
        return fluid.invokeGlobalFunction(componentName);
    };

    gpii.config.makeConfigLoader({
        nodeEnv: gpii.config.getNodeEnv(),
        configPath: gpii.config.getConfigPath()
    });

})();