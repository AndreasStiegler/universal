/*!
GPII Preferences Framework Filtering Tests

Copyright 2012 OCAD University
Copyright 2014 Raising the Floor - International

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

// Declare dependencies
/*global require, fluid, jqUnit, gpii, start*/

(function () {
    "use strict";

    var fluid = fluid || require("infusion"),
        jqUnit = fluid.require("jqUnit"),
        gpii = fluid.registerNamespace("gpii");

    require("ontologyHandler");

    fluid.registerNamespace("gpii.tests.ontologyHandler.filtering");

    var full = {
        simple: {
            a: {
                b: 1,
                c: 2
            }
        },
        medium: {
            a: {
                a1: {
                    a11: 14
                },
                a2: {
                    a21: [ 'a', 'b' ]
                }
            }
        },
        complex: {
            a: 12,
            b: {},
            c: {
                c1: [
                    { hello: "world" }
                ]
            }
        }
    };

    var testFixtures = [
        {
            description: "Very simple non-nested removal of single key",
            full: full.simple,
            remove: {
                a: {
                    b: 3
                }
            },
            expected: {
                a: {
                    c: 2
                }
            }
        }, {
            description: "simple value filtering",
            full: full.medium,
            remove: {
                a: {
                    a1: {
                        a11: 12
                    }
                }
            },
            expected: {
                a: {
                    a2: {
                        a21: [ 'a', 'b' ]
                    }
                }
            }
        }, {
            description: "Higher hierarchy filtering",
            full: full.medium,
            remove: {
                a: 13
            },
            expected: {}
        }, {
            description: "Filtering simple array value",
            full: full.medium,
            remove: {
                a: {
                    a2: {
                        a21: [ 'a' ]
                    }
                }
            },
            expected: {
                a: {
                    a1: {
                        a11: 14
                    }
                }
            }
        }, {
            description: "filtering complementary objects",
            full: full.medium,
            remove: {
                b: 12
            },
            expected: full.medium
        }, {
            description: "removing multiple keys",
            full: full.complex,
            remove: {
                a: 15,
                c: 18
            },
            expected: {
                b: {}
            }
        }, {
            description: "Removing all keys",
            full: full.complex,
            remove: {
                a: {
                    a1: "hello"
                },
                b: "stupid",
                c: "cat"
            },
            expected: {}
        }, {
            description: "empty object passed as 'full' parameter",
            full: {},
            remove: {
                a: 15
            },
            expected: {}
        }, {
            description: "empty object passed as 'remove' parameter",
            full: {
                a: 15
            },
            remove: {},
            expected: {
                a: 15
            }
        }
    ];

    gpii.tests.ontologyHandler.filtering.runTests = function () {
        jqUnit.module("Utilities");

        jqUnit.test("ontologyServer.filter", function () {
            fluid.each(testFixtures, function (test) {
                var result = gpii.ontologyHandler.utils.filterPrefs(test.full, test.remove);
                jqUnit.assertDeepEq(test.description, test.expected, result);
            });
        });
    }();
}());