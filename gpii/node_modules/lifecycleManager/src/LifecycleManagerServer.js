/**
 *  GPII Lifecycle Manager Server
 *
 *  Copyright 2013 OCAD University
 *
 *  Licensed under the New BSD license. You may not use this file except in
 *  compliance with this License.
 *
 * The research leading to these results has received funding from the European Union's
 * Seventh Framework Programme (FP7/2007-2013)
 * under grant agreement no. 289016.
 *
 * You may obtain a copy of the License at
 * https://github.com/GPII/universal/blob/master/LICENSE.txt
 */

"use strict";

var fluid = require("infusion"),
    path = require("path"),
    gpii = fluid.registerNamespace("gpii");

fluid.require("kettle", require);
fluid.require("./LifecycleManagerPost.js", require);

fluid.defaults("gpii.lifecycleManagerServer", {
    gradeNames: ["kettle.app", "gpii.lifecycleManager", "autoInit"],
    handlers: {
        lifecycleManagerStart: {
            route: "/start/:token",
            type: "post"
        },
        lifecycleManagerStop: {
            route: "/stop/:token",
            type: "post"
        },
        lifecycleManagerUpdate: {
            route: "/update/:token",
            type: "post"
        }
    },
    root: path.join(__dirname, "..")
});
