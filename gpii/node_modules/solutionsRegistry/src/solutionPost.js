/*!
GPII Preferences Server POST Handler

Copyright 2012 OCAD University

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

(function () {

    "use strict";

    var fluid = require("infusion"),
        gpii = fluid.registerNamespace("gpii");

    fluid.demands("gpii.requests.request.handler", "solutionPost", {
        options: {
            invokers: {
                handle: {
                    funcName: "gpii.requests.request.handler.solutionPost",
                    args: ["{requests}", "{request}", "{solutionsRegistry}.solutionSource"]
                }
            }
        }
    });

    gpii.requests.request.handler.solutionPost = function (requests, request, solutionSource) {
        var req = request.req;
        solutionSource.set({
            id: req.params.id
        }, req.body, gpii.callbackWrapper(request, function (resp) {
            if (resp.ok) {
                resp = fluid.model.transformWithRules(resp, {
                    "_rev": "rev",
                    "_id": "id"
                });
            }
            requests.events.onSuccess.fire(resp);
        }));
    };

})();