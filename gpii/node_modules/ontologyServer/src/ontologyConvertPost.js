/*!
GPII Ontology Server GET Handler

Copyright 2012 OCAD University

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

(function () {

    "use strict";

    var fluid = require("infusion"),
        gpii = fluid.registerNamespace("gpii");

    fluid.demands("gpii.requests.request.handler", "ontologyConvertPost", {
        options: {
            invokers: {
                handle: {
                    funcName: "gpii.requests.request.handler.ontologyConvertPost",
                    args: ["{that}", "{requestProxy}", "{request}.req.params.to", "{request}.req.body.preferences", "{ontologyServer}.ontologySource"]
                }
            }
        }
    });

    gpii.requests.request.handler.ontologyConvertPost = function (that, requestProxy, to, preferences, ontologySource) {
        if (to !== "default") {
            requestProxy.events.onError.fire({
                isError: true,
                message: "Ontology server currently support only transformations to default ontology."
            });
            return;
        }
        var ontologyName = gpii.ontologyServer.getOntologyName(preferences);
        that.when(ontologySource.get({
            name: ontologyName
        }), function (transformations) {
            var transformed = fluid.model.transformWithRules(preferences, transformations);
            return transformed;
        });
    };

})();