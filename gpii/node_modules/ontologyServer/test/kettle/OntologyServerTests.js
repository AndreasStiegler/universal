/**
 * GPII Ontology Server Tests
 *
 * Copyright 2014 Raising the floor - international
 *
 * Licensed under the New BSD license. You may not use this file except in
 * compliance with this License.
 *
 * You may obtain a copy of the License at
 * https://github.com/GPII/kettle/LICENSE.txt
 */

/*global require, __dirname*/

var fluid = require("infusion"),
    path = require("path"),
    flowManager = fluid.require("flowManager", require),
    jqUnit = fluid.require("jqUnit"),
    configPath = path.resolve(__dirname, "./configs"),
    kettle = fluid.registerNamespace("kettle"),
    gpii = fluid.registerNamespace("gpii"),
    fs = require("fs"),
    statTime = new Date();

fluid.require("kettle/test/utils/js/KettleTestUtils", require);
fluid.registerNamespace("gpii.ontologyServer.tests");

gpii.ontologyServer.tests.testResponseMaker = function (expected) {
    return function (data) {
        var retrievedData = JSON.parse(data);
        console.log(JSON.stringify(retrievedData, null, 4));
        jqUnit.assertDeepEq("Response is correct", expected, retrievedData);
    };
};

gpii.ontologyServer.tests.buildTestDef = function (fixture) {
    return {
        name: fixture.name,
        expect: 1,
        config: {
            nodeEnv: "standardConfig",
            configPath: configPath
        },
        components: {
            getRequest: {
                type: "kettle.tests.request.http",
                options: {
                    requestOptions: {
                        path: "/preferences/"+fixture.url,
                        method: "GET",
                        port: 8081
                    },
                    termMap: {
                        token: fixture.token
                    }
                }
            }
        },
        sequence: [{
            func: "{getRequest}.send"
        }, {
            event: "{getRequest}.events.onComplete",
            listenerMaker: "gpii.ontologyServer.tests.testResponseMaker",
            makerArgs: [ fixture.expected ]
        }]
    };
};

var fixtures = [
    {
        name: "GET: Basic retrieval of simple NP set in same ontology (no parameter)",
        token: "np_flatonly",
        url: "%token",
        ontologyDir: path.resolve(__dirname, "../../../../testData/ontologies/"),
        expected: {
            "http://registry.gpii.org/common/onscreenKeyboard": [{ "value": true }],
            "http://registry.gpii.org/common/-provisional-initDelay": [{ "value": 0.120 }],
            "http://registry.gpii.org/common/cursorSpeed": [{ "value": 0.850 }],
            "http://registry.gpii.org/common/cursorAcceleration": [{ "value": 0.800 }],
            "http://registry.gpii.org/common/-provisional-mouseEmulationEnabled": [{ "value": true }],
            "http://registry.gpii.org/common/unknown": [{ "value": true }]
        }
    }, {
        name: "GET: Basic retrieval of simple NP set in same ontology (with parameter)",
        token: "np_flatonly",
        url: "%token?view=flat",
        ontologyDir: path.resolve(__dirname, "../../../../testData/ontologies/"),
        expected: {
            "http://registry.gpii.org/common/onscreenKeyboard": [{ "value": true }],
            "http://registry.gpii.org/common/-provisional-initDelay": [{ "value": 0.120 }],
            "http://registry.gpii.org/common/cursorSpeed": [{ "value": 0.850 }],
            "http://registry.gpii.org/common/cursorAcceleration": [{ "value": 0.800 }],
            "http://registry.gpii.org/common/-provisional-mouseEmulationEnabled": [{ "value": true }],
            "http://registry.gpii.org/common/unknown": [{ "value": true }]
        }
    }, {
        name: "GET: Retrieval of simple NP set in different ontology plus non-translateable preference",
        token: "np_flatonly",
        url: "%token?view=ISO24751",
        ontologyDir: path.resolve(__dirname, "../../../../testData/ontologies/"),
        expected: {
            "control": {
                "onscreenKeyboard": true,
                "mouseEmulation": {
                    "cursorSpeed": 0.85,
                    "cursorAcceleration": 0.8,
                    "-provisional-initDelay": 0.12,
                    "-provisional-mouseEmulationEnabled": true
                }
            }
        }
    }, {
        name: "GET: Retrieval of mixed NP set in new+existing+non-compatible ontolgoies",
        token: "np_mixed_simple",
        url: "%token?view=ISO24751",
        ontologyDir: path.resolve(__dirname, "../../../../testData/ontologies/"),
        expected: {
              "control": {
                "onscreenKeyboard": true,
                "mouseEmulation": {
                    "cursorSpeed": 0.85,
                    "cursorAcceleration": 0.8,
                    "-provisional-initDelay": 0.12,
                    "-provisional-mouseEmulationEnabled": true
                }
            },
            "display": {
                "screenEnhancement": {
                    "fontSize": 24
                }
            }
        }
    }
];

var testDefs = [
    {
        name: "POST: With no token specified",
        expect: 1,
        config: {
            nodeEnv: "standardConfig",
            configPath: configPath
        },
        components: {
            getRequest: {
                type: "kettle.tests.request.http",
                options: {
                    requestOptions: {
                        path: "/preferences/"+fixture.url,
                        method: "GET",
                        port: 8081
                    },
                    termMap: {
                        token: fixture.token
                    }
                }
            }
        },
        sequence: [{
            func: "{getRequest}.send"
        }, {
            event: "{getRequest}.events.onComplete",
            listenerMaker: "gpii.ontologyServer.tests.testResponseMaker",
            makerArgs: [ fixture.expected ]
        }]
    }];

fluid.each(fixtures, function (fixture) {
    testDefs.push(gpii.ontologyServer.tests.buildTestDef(fixture));
});

module.exports = kettle.tests.bootstrap(testDefs);