(function () {

    "use strict";

    var fluid = require("infusion"),
        express = require("express"),
        gpii = fluid.registerNamespace("gpii");

    fluid.defaults("gpii.middleware", {
        gradeNames: ["autoInit", "fluid.eventedComponent"],
        preInitFunction: "gpii.middleware.preInit",
        finalInitFunction: "gpii.middleware.finalInit",
        nickName: "middleware",
        components: {
            requests: "{requests}",
            server: "{expressServer}.server"
        },
        invokers: {
            resolveEventName: "gpii.middleware.resolveEventName",
            handle: "gpii.middleware.handle"
        }
    });

    gpii.middleware.preInit = function (that) {
        that.nickName = "middleware";
    };

    gpii.middleware.finalInit = function (that) {
        that.requests.events.registerMiddleware.fire(that);

        that.server.use(function (req, res, next) {
            var eventName = that.resolveEventName();
            req.fluidRequest.events[eventName].fire(req.fluidRequest);
        });
    };

    fluid.demands("gpii.middleware.resolveEventName", "gpii.middleware", {
        funcName: "gpii.middleware.resolveEventName",
        args: "{gpii.middleware}.typeName"
    });

    gpii.middleware.resolveEventName = function (typeName) {
        var eventName = fluid.computeNickName(typeName);
        return "on" + eventName.charAt(0).toUpperCase() + eventName.slice(1);
    };

    fluid.defaults("gpii.middleware.bodyParser", {
        gradeNames: ["gpii.middleware", "autoInit"]
    });
    fluid.demands("gpii.middleware.handle", "gpii.middleware.bodyParser", {
        funcName: "gpii.middleware.bodyParser.handle",
        args: "{arguments}.0"
    });
    gpii.middleware.bodyParser.handle = function (request) {
        var parser = express.bodyParser();
        parser(request.req, request.res, request.next);
    };

})();