/*!
GPII Preferences Server POST Handler

Copyright 2012 OCAD University

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

(function () {

    "use strict";

    var fluid = require("infusion"),
        gpii = fluid.registerNamespace("gpii");

    fluid.demands("gpii.requests.request.handler", "matchPost", {
        options: {
            invokers: {
                handle: {
                    funcName: "gpii.requests.request.handler.matchPost",
                    args: ["{requests}", "{request}", "{gpii.matchMaker}"]
                }
            }
        }
    });

    gpii.requests.request.handler.matchPost = function (requests, request, matchMaker) {
        var req = request.req,
            res = request.res,
            model = req.body,
            solutionsReporter = matchMaker.solutionsReporter,
            transform = matchMaker.transformer.transformSettings,
            os = fluid.get(model, "device.OS.id"),
            version = fluid.get(model, "device.OS.version");

        var strategy = fluid.getGlobalValue(matchMaker.options.strategy);
        solutionsReporter.get({
            os: os,
            version: version
        }, gpii.callbackWrapper(request, function (solutions) {
            if (!solutions) {
                requests.events.onError.fire();
                return;
            }
            matchMaker.prefilterSolutions(solutions, os, version);
            solutions = matchMaker.prefilterSolutions(solutions, model.device);
            requests.events.onSuccess.fire(transform({
                solutions: matchMaker.match(model.preferences, solutions, strategy),
                preferences: model.preferences
            }));
        }));
    };

})();