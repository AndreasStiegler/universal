/*!
GPII Canopy Matchmaker

Copyright 2012 OCAD University
Copyright 2012 Antranig Basman

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

var fluid = fluid || require("infusion");

var matchMaker = fluid.registerNamespace("gpii.matchMaker");
var flat = fluid.registerNamespace("gpii.matchMaker.flat");

flat.disposeStrategy = function (leaves, solrecs) {
    fluid.each(solrecs, function(solrec) {
        var accepted = fluid.find(leaves, function (leaf) {
            return fluid.get(solrec.skeleton, leaf, fluid.model.escapedGetConfig);
        });
        //INSANELY DIRTY HACK TO WORK AROUND GPII-526.. For all relevant apps, it checks for
        //the ***Enabled and doesn't launch if not present:
        var solId = solrec.solution.id;
        if (solId === "com.microsoft.windows.magnifier" ||
            solId === "org.gnome.desktop.a11y.magnifier" ||
            solId === "com.yourdolphin.supernova-as") {
            if (leaves.indexOf("display.screenEnhancement.-provisional-magnifierEnabled") === -1) {
                accepted = false;
            }
        }

        if (solId === "org.nvda-project" ||
            solId === "org.gnome.orca" ||
            solId === "com.yourdolphin.supernova-as" ||
            solId === "com.android.talkback") {
            if (leaves.indexOf("display.screenReader.-provisional-screenReaderTTSEnabled") === -1 &&
                leaves.indexOf("display.screenReader.-provisional-screenReaderBrailleOutput") === -1) {
                accepted = false;
            }
        }

        solrec.disposition = accepted? "accept" : "reject";
    });
    return solrecs;
};
